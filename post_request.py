##paramters can be found using google chrome's developer tools, network tab, the path with the "POST" method
import mechanize, urllib;

def post_request(term, classNumber):
    post_url = "https://isis.jhu.edu/classes/Default.aspx"
    parameters = {
        '__EVENTTARGET':'',
        '__EVENTARGUMENT':'',
        "__LASTFOCUS":"", "__VIEWSTATE":"",
        "__EVENTVALIDATION":"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",
        "ctl00$content$ucSchoolList$rptSchools$ctl00$hdnSchool":"Bloomberg School of Public Health",
        "ctl00$content$ucSchoolList$rptSchools$ctl01$hdnSchool":"Bloomberg School of Public Health Non-Credit",
        "ctl00$content$ucSchoolList$rptSchools$ctl02$hdnSchool":"Carey Business School",
        "ctl00$content$ucSchoolList$rptSchools$ctl03$cbSchool":"on",
        "ctl00$content$ucSchoolList$rptSchools$ctl03$hdnSchool":"Krieger School of Arts and Sciences",
        "ctl00$content$ucSchoolList$rptSchools$ctl04$hdnSchool":"Krieger School of Arts and Sciences Advanced Academic Programs",
        "ctl00$content$ucSchoolList$rptSchools$ctl05$hdnSchool":"Nitze School of Advanced International Studies",
        "ctl00$content$ucSchoolList$rptSchools$ctl06$hdnSchool":"School of Education",
        "ctl00$content$ucSchoolList$rptSchools$ctl07$hdnSchool":"School of Medicine",
        "ctl00$content$ucSchoolList$rptSchools$ctl08$hdnSchool":"School of Nursing",
        "ctl00$content$ucSchoolList$rptSchools$ctl09$hdnSchool":"The Peabody Institute",
        "ctl00$content$ucSchoolList$rptSchools$ctl10$hdnSchool":"The Peabody Preparatory",
        "ctl00$content$ucSchoolList$rptSchools$ctl11$cbSchool":"on",
        "ctl00$content$ucSchoolList$rptSchools$ctl11$hdnSchool":"Whiting School of Engineering",
        "ctl00$content$ucSchoolList$rptSchools$ctl12$hdnSchool":"Whiting School of Engineering Programs for Professionals",
        "ctl00$content$lbTerms": term,
        "ctl00$content$txtCourseTitle":"",
        "ctl00$content$txtCourseNumber": classNumber,
        "ctl00$content$txtInstructor":"",
        "ctl00$content$btnSearch":"Search"
    } ##this specifies the parameters of the search, the class number, the term, the schools: kreiger school of arts and crafts and whiting engineering
    
    try:
        data = urllib.urlencode(parameters)
    except:
        print("error ecoding params")
    
    bro = mechanize.Browser()
    bro.set_handle_robots(False)
    bro.addheaders = [("User-agent","Chrome")]
    ##    search = bro.open(post_url,data).read()
    ##  print(search)
    resp = bro.open(post_url,data)
    
    parameters = {
"__EVENTTARGET":"ctl00$content$lbShowHideDetails",
"__EVENTARGUMENT":"",
"__LASTFOCUS":"",
"__VIEWSTATE":"/wEPDwUKMTEwNTcwNDIwNg9kFgJmD2QWAgIDD2QWAgIBD2QWCgIBDzwrAAsAZAIFDxYCHgRUZXh0BQExZAIHDxYCHgtfIUl0ZW1Db3VudAIDFgZmD2QWBGYPFQEGU2Nob29sZAIBDxYCHwECAhYEZg9kFgRmDxUCI0tyaWVnZXIgU2Nob29sIG9mIEFydHMgYW5kIFNjaWVuY2VzAGQCAQ8PFgQeC0NvbW1hbmROYW1lBQZTY2hvb2weD0NvbW1hbmRBcmd1bWVudAUjS3JpZWdlciBTY2hvb2wgb2YgQXJ0cyBhbmQgU2NpZW5jZXNkZAIBD2QWBGYPFQIdV2hpdGluZyBTY2hvb2wgb2YgRW5naW5lZXJpbmcAZAIBDw8WBB8CBQZTY2hvb2wfAwUdV2hpdGluZyBTY2hvb2wgb2YgRW5naW5lZXJpbmdkZAIBD2QWBGYPFQEEVGVybWQCAQ8WAh8BAgEWAmYPZBYEZg8VAglGYWxsIDIwMTQAZAIBDw8WBB8CBQRUZXJtHwMFCUZhbGwgMjAxNGRkAgIPZBYEZg8VAQ1Db3Vyc2UgTnVtYmVyZAIBDxYCHwECARYCZg9kFgRmDxUCCkVOLjUxMC4zMTIAZAIBDw8WBB8CBQ1Db3Vyc2UgTnVtYmVyHwMFCkVOLjUxMC4zMTJkZAIJDw8WAh4HVmlzaWJsZWhkFhICAQ8PFgIfBGhkZAIDDw8WAh8EaGRkAgUPDxYCHwRoZGQCBw8PFgIfBGhkZAIJDw8WAh8EaGRkAgsPDxYCHwRoZGQCDQ8PFgIfBGhkZAIPDw8WAh8EaGRkAhEPZBYEAg8PEA8WAh4HQ2hlY2tlZGhkZGRkAhEPEA8WAh8FaGRkZGQCCw9kFgwCAQ8QZGQWAQIBZAIDDxBkZBYBAgFkAgUPDxYCHwAFDFtFeHBhbmQgQWxsXWRkAgcPDxYCHwRoZBYGZg8PFgIfBGhkZAICDxYCHwECARYCZg9kFgQCAQ8PFgQfAwUBMR8EaGQWAmYPFQEBMWQCAw8PFgIfBGdkFgJmDxUBATFkAgQPDxYCHwRoZGQCCQ8WAh8BAgEWBGYPZBYCAgEPFgIfBGhkAgEPZBYQAgEPFgIfAAUDb2RkZAIDDxYCHwRoFgJmDxUBHVdoaXRpbmcgU2Nob29sIG9mIEVuZ2luZWVyaW5nZAIEDxUCCkVOLjUxMC4zMTICMDFkAgUPZBYCZg8VAgY0MjU3NTQGNDI1NzU0ZAIGDxUBGFRoZXJtb2R5bmFtaWNzL01hdGVyaWFsc2QCCA8VAwlGYWxsIDIwMTQPSG9tZXdvb2QgQ2FtcHVzFU1XRiAxMjowMFBNIC0gMTI6NTBQTWQCCg8VAQRPcGVuZAILDxYCHwRoFgICAQ9kFggCGQ8WAh8BAv////8PZAIbDxYCHwEC/////w9kAh0PFgIfAQL/////D2QCHw8WAh8BAv////8PZAILDw8WAh8EaGQWBmYPDxYCHwRoZGQCAg8WAh8BAgEWAmYPZBYEAgEPDxYEHwMFATEfBGhkFgJmDxUBATFkAgMPDxYCHwRnZBYCZg8VAQExZAIEDw8WAh8EaGRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYEBVdjdGwwMCRjb250ZW50JHJwdEN1cnJlbnRDcml0ZXJpYSRjdGwwMCRycHRDdXJyZW50Q3JpdGVyaWFGaWx0ZXJzJGN0bDAwJGliUmVtb3ZlQ3JpdGVyaWEFV2N0bDAwJGNvbnRlbnQkcnB0Q3VycmVudENyaXRlcmlhJGN0bDAwJHJwdEN1cnJlbnRDcml0ZXJpYUZpbHRlcnMkY3RsMDEkaWJSZW1vdmVDcml0ZXJpYQVXY3RsMDAkY29udGVudCRycHRDdXJyZW50Q3JpdGVyaWEkY3RsMDEkcnB0Q3VycmVudENyaXRlcmlhRmlsdGVycyRjdGwwMCRpYlJlbW92ZUNyaXRlcmlhBVdjdGwwMCRjb250ZW50JHJwdEN1cnJlbnRDcml0ZXJpYSRjdGwwMiRycHRDdXJyZW50Q3JpdGVyaWFGaWx0ZXJzJGN0bDAwJGliUmVtb3ZlQ3JpdGVyaWGgJ0eNCRLFzJ87EVlRBi2tZRNzGQ==",
"__EVENTVALIDATION":"/wEWFQLUxtrvDgKepriNAwLOp7yRAgK68/COBgLwmLTpCAK0s5zlDAKElIb/AQLkxLOCCgLIgKDoCgKK8JiaDgLN0NXiDAKJ6ZaxBALRsYngAgKDo62RAgKMzPv8DgKOzMf8DgKPzPv8DgKJzMf8DgKKzPv8DgKqjaCrCQK9p6D0BQvyQx0jYW5ESInJEjn2xKsfii8A",
"ctl00$content$ddlSortBy":"CourseNumber",
"ctl00$content$ddlResultsPerPage":"30"
    }
    data = urllib.urlencode(parameters)
    htmlPage = (bro.open(resp.geturl(),data).read())
    return htmlPage

if __name__ == "__main__":
    print(post_request("Fall 2015","EN.510.312"))
